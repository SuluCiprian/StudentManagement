@model List<StudentsManagement.Domain.Student>

@{
    ViewData["Title"] = "Add Student";
}
@using StudentsManagement.Core.Shared
@inject IActivitiesService activityService

<h2>Add</h2>
<h4>Student</h4>
<hr />
@*<div class="row">
    <div class="col-md-4">
        <form asp-controller="Activities" asp-action="AddStudent" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @foreach (var item in Model)
            {
                <div class="form-group">
                    <label asp-for="@item.Name" class="control-label"></label>
                    <input asp-for="@item.Name" class="form-control" />
                    <span asp-validation-for="@item.Name" class="text-danger"></span>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>*@

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
        </tr>
    </thead>
    <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        <a asp-action="AddStudent" asp-route-id="@item.Id" method="post">Add</a>
                    </td>
                </tr>
            }
    </tbody>
</table>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
